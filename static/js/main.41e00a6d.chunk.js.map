{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","App.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","services/pixabayApi.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","App.js","index.js","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","s","searchbar","form","this","type","button","button_label","reactIcons","input","autoComplete","autoFocus","placeholder","onChange","Component","api","fetchImage","page","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","image","onImageClick","src","webformatURL","alt","tag","ImageGalleryItem_image","onClick","largeImageURL","propType","PropTypes","shape","string","tags","func","Button","handleClickButton","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","toggleModal","handleOverlayClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","largeImg","Spiner","Loader","color","height","width","Status","ImageGallery","images","loading","status","showModal","prevProps","prevState","prevName","pixabayApi","data","hits","length","catch","setStatesetState","prev","pageScroll","finally","Title","map","key","id","App","handleFormSubmit","scrollTo","top","documentElement","scrollHeight","behavior","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.41e00a6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__XbPfT\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__2HEpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1CUBf\",\"Modal\":\"Modal_Modal__2WiGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__14UYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3YamI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__1ZMLy\"};","import s from './Searchbar.module.css';\nimport { ImSearch } from 'react-icons/im';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { toast } from 'react-toastify';\n\nexport default class Searchbar extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleNameChange = event => {\n    this.setState({ imageName: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.imageName.trim() === '') {\n      toast.error('Please enter name of search');\n      return;\n    }\n\n    this.props.onSubmit(this.state.imageName);\n    this.setState({ imageName: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.searchbar}>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.button}>\n            <span className={s.button_label}>\n              <ImSearch className={s.reactIcons} />\n            </span>\n          </button>\n\n          <input\n            className={s.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.imageName}\n            onChange={this.handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  handleNameChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n  imageName: PropTypes.string,\n};\n","export function fetchImage(imageName, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${imageName}&page=${page}&key=23281316-63779c8712cdbe982715f9396&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`There are no images for name ${imageName}`),\n    );\n  });\n}\n\nconst api = { fetchImage };\n\nexport default api;\n","import React from 'react';\nimport s from './ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({ image, onImageClick }) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={image.webformatURL}\n        alt={image.tag}\n        className={s.ImageGalleryItem_image}\n        onClick={() => onImageClick(image.largeImageURL)}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propType = {\n  image: PropTypes.shape({\n    webformatURL: PropTypes.string,\n    largeImageURL: PropTypes.string,\n    tags: PropTypes.string,\n  }),\n  onImageClick: PropTypes.func,\n};\n","import s from './Button.module.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default function Button({ handleClickButton }) {\n  return (\n    <button type=\"button\" className={s.Button} onClick={handleClickButton}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  handleClickButton: PropTypes.func,\n};\n","import s from './Modal.module.css';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.toggleModal();\n    }\n  };\n\n  handleOverlayClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.toggleModal();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleOverlayClick}>\n        <div className={s.Modal}>\n          <img src={this.props.largeImg} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  toggleModal: PropTypes.func,\n  largeImg: PropTypes.string,\n};\n","import React from 'react';\nimport s from './Loader.module.css';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Spiner = () => (\n  <div className={s.Loader}>\n    <Loader type=\"Bars\" color=\"#00BFFF\" height={100} width={100} />\n  </div>\n);\n\nexport default Spiner;\n","import React, { Component } from 'react';\nimport s from './ImageGallery.module.css';\nimport PropTypes from 'prop-types';\nimport pixabayApi from '../../services/pixabayApi';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Button from '../Button';\nimport Modal from '../Modal';\nimport Spiner from '../Loader';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default class ImageGallery extends Component {\n  state = {\n    images: [],\n    page: 1,\n    error: null,\n    loading: false,\n    status: Status.IDLE,\n    showModal: false,\n    largeImg: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.imageName;\n    const imageName = this.props.imageName;\n    const page = this.state.page;\n\n    if (prevName !== imageName) {\n      this.setState({ status: Status.PENDING });\n\n      pixabayApi\n        .fetchImage(imageName, page)\n        .then(data => {\n          if (data.hits.length > 0) {\n            this.setState({\n              images: data.hits,\n              status: Status.RESOLVED,\n            });\n          } else {\n            this.setState({ status: Status.REJECTED });\n          }\n        })\n        .catch(error => {\n          this.setStatesetState({ error, status: Status.REJECTED });\n        });\n    } else if (prevState.page !== page && page !== 1) {\n      this.setState({ loading: true });\n\n      pixabayApi\n        .fetchImage(imageName, page)\n        .then(data => {\n          this.setState(prev => ({\n            images: [...prev.images, ...data.hits],\n            status: Status.RESOLVED,\n          }));\n          this.props.pageScroll();\n        })\n        .catch(() => this.setState({ status: Status.REJECTED }))\n        .finally(() => this.setState({ loading: false }));\n    }\n  }\n\n  handleClickButton = () => {\n    this.setState(({ page }) => {\n      return {\n        page: page + 1,\n      };\n    });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  onImageClick = largeImageURL => {\n    this.setState({ largeImg: largeImageURL });\n    this.toggleModal();\n  };\n\n  render() {\n    const { images, status, loading, largeImg, showModal } = this.state;\n\n    if (status === 'idle') {\n      return <h2 className={s.Title}>Waiting for search name</h2>;\n    }\n\n    if (status === 'pending') {\n      return <Spiner />;\n    }\n\n    if (status === 'rejected') {\n      return <h2 className={s.Title}>Something was wrong please try again!</h2>;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <>\n          <ul className={s.ImageGallery}>\n            {images.map(image => {\n              return (\n                <ImageGalleryItem\n                  key={image.id}\n                  image={image}\n                  onImageClick={this.onImageClick}\n                />\n              );\n            })}\n          </ul>\n          {loading && <Spiner />}\n          {images.length >= 12 && (\n            <Button handleClickButton={this.handleClickButton} />\n          )}\n          {showModal && (\n            <Modal toggleModal={this.toggleModal} largeImg={largeImg}></Modal>\n          )}\n        </>\n      );\n    }\n  }\n}\n\nImageGallery.propTypes = {\n  imageName: PropTypes.string,\n  pageScroll: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './App.module.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nexport default class App extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleFormSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  pageScroll() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  render() {\n    return (\n      <div className={s.App}>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery\n          imageName={this.state.imageName}\n          pageScroll={this.pageScroll}\n        />\n        <ToastContainer autoClose={2000} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__33bli\",\"form\":\"Searchbar_form__22vu4\",\"button\":\"Searchbar_button__2_hru\",\"input\":\"Searchbar_input__3Nyaa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3VHJF\",\"Title\":\"ImageGallery_Title__3_71N\"};"],"sourceRoot":""}