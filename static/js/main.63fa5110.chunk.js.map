{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","App.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","services/pixabayApi.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","App.js","index.js","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","s","searchbar","form","this","type","button","button_label","reactIcons","input","autoComplete","autoFocus","placeholder","onChange","Component","api","fetchImage","page","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","image","onImageClick","src","webformatURL","alt","tag","ImageGalleryItem_image","onClick","largeImageURL","propType","PropTypes","shape","string","tags","func","Button","handleClickButton","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","toggleModal","handleOverlayClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","largeImg","Spiner","Loader","color","height","width","Status","ImageGallery","images","loading","status","showModal","prevProps","prevState","prevName","pixabayApi","data","hits","length","catch","setStatesetState","prev","pageScroll","finally","Title","map","key","id","App","handleFormSubmit","scrollTo","top","documentElement","scrollHeight","behavior","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63fa5110.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__XbPfT\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__2HEpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1CUBf\",\"Modal\":\"Modal_Modal__2WiGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__14UYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3YamI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__1ZMLy\"};","import s from './Searchbar.module.css';\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class Searchbar extends Component {\r\n    state = {\r\n        imageName: '',\r\n    };\r\n\r\n    handleNameChange = event => {\r\n        this.setState({ imageName: event.currentTarget.value.toLowerCase() });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.imageName.trim() === '') {\r\n            toast.error('Please enter name of search');\r\n            return;\r\n        }\r\n        \r\n        this.props.onSubmit(this.state.imageName);\r\n        this.setState({ imageName: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header className={s.searchbar}>\r\n                <form className={s.form} onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className={s.button}>\r\n                        <span className={s.button_label}><ImSearch  className={s.reactIcons}/></span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={this.state.imageName}\r\n                        onChange={this.handleNameChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  handleNameChange: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n  imageName: PropTypes.string,\r\n};","export function fetchImage(imageName, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${imageName}&page=${page}&key=23281316-63779c8712cdbe982715f9396&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`There are no images for name ${imageName}`));\r\n  });\r\n}\r\n\r\nconst api = { fetchImage };\r\n\r\nexport default api;","import React from 'react';\r\nimport s from './ImageGalleryItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({ image, onImageClick }) {\r\n    return (\r\n        <li className={s.ImageGalleryItem} >\r\n            <img\r\n                src={image.webformatURL}\r\n                alt={image.tag}\r\n                className={s.ImageGalleryItem_image}\r\n                onClick={() => onImageClick(image.largeImageURL)}\r\n                />\r\n            </li>\r\n        )\r\n};\r\n    \r\n\r\nImageGalleryItem.propType = {\r\n  image: PropTypes.shape({\r\n    webformatURL: PropTypes.string,\r\n    largeImageURL: PropTypes.string,\r\n    tags: PropTypes.string,\r\n  }),\r\n  onImageClick: PropTypes.func,\r\n};","import s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nexport default function Button({ handleClickButton }) {\r\n  return (\r\n    <button type=\"button\" className={s.Button} onClick={handleClickButton}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes={\r\n  handleClickButton: PropTypes.func,\r\n}","import s from './Modal.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown)\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if(e.code === 'Escape') {\r\n            this.props.toggleModal();\r\n        }\r\n    }\r\n\r\n    handleOverlayClick = event => {\r\n        if(event.currentTarget === event.target) {\r\n            this.props.toggleModal();\r\n        }\r\n    }\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={this.handleOverlayClick}>\r\n        <div className={s.Modal}>\r\n          <img src={this.props.largeImg} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes={\r\n  toggleModal:PropTypes.func,\r\n  largeImg: PropTypes.string,\r\n}","import React from 'react';\r\nimport s from './Loader.module.css';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst Spiner = () => (\r\n  <div className={s.Loader}>\r\n    <Loader type=\"Bars\" color=\"#00BFFF\" height={100} width={100} />\r\n  </div>\r\n);\r\n\r\nexport default Spiner;","import React, { Component } from 'react';\r\nimport s from './ImageGallery.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport pixabayApi from '../../services/pixabayApi';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Button from '../Button';\r\nimport Modal from '../Modal';\r\nimport Spiner from '../Loader';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default class ImageGallery extends Component {\r\n  state = {\r\n    images: [],\r\n    page: 1,\r\n    error: null,\r\n    loading: false,\r\n    status: Status.IDLE,\r\n    showModal: false,\r\n    largeImg: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.imageName;\r\n    const imageName = this.props.imageName;\r\n    const page = this.state.page;\r\n\r\n    if (prevName !== imageName) {\r\n      this.setState({ status: Status.PENDING });\r\n\r\n      pixabayApi.fetchImage(imageName, page)\r\n        .then((data) => {\r\n          if (data.hits.length > 0) {\r\n            this.setState({\r\n              images: data.hits,\r\n              status: Status.RESOLVED,\r\n            });\r\n          } else {\r\n            this.setState({ status: Status.REJECTED });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setStatesetState({error, status: Status.REJECTED });\r\n        });\r\n    } else if  (prevState.page !== page && page !== 1) {\r\n      this.setState({ loading: true });\r\n\r\n      pixabayApi.fetchImage(imageName, page)\r\n        .then((data) => {\r\n          this.setState((prev) => ({\r\n            images: [...prev.images, ...data.hits],\r\n            status: Status.RESOLVED,\r\n          }));\r\n          this.props.pageScroll();\r\n        })\r\n        .catch(() => this.setState({ status: Status.REJECTED }))\r\n        .finally(() => this.setState({ loading: false }));\r\n    }\r\n  }\r\n\r\n  handleClickButton = () => {\r\n    this.setState(( {page} ) => {\r\n      return {\r\n        page: page + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  onImageClick = largeImageURL => {\r\n    this.setState({ largeImg: largeImageURL });\r\n    this.toggleModal();\r\n  };\r\n  \r\n\r\n  render() {\r\n    const { images, status, loading, largeImg, showModal } = this.state;\r\n\r\n    if (status === 'idle') {\r\n      return <h2 className={s.Title}>Waiting for search name</h2>;\r\n    }\r\n\r\n    if (status === 'pending') {\r\n      return <Spiner  />;\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      return <h2 className={s.Title}>Something was wrong please try again!</h2>;\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <>\r\n          <ul className={s.ImageGallery}>\r\n            {images.map(image => {\r\n              return (\r\n                <ImageGalleryItem\r\n                  key={image.id}\r\n                  image={image}\r\n                  onImageClick={this.onImageClick}\r\n                />\r\n              );\r\n            })}\r\n          </ul>\r\n        {loading && <Spiner />}\r\n        {images.length >= 12 && <Button handleClickButton={this.handleClickButton} />}\r\n        {showModal && (\r\n            <Modal toggleModal={this.toggleModal} largeImg={largeImg}></Modal>\r\n          )}\r\n      </>)\r\n    }\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  imageName: PropTypes.string,\r\n  pageScroll: PropTypes.func,\r\n};","import React, { Component } from 'react';\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from './App.module.css';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    imageName: '',\r\n  };\r\n\r\n  handleFormSubmit = imageName => {\r\n    this.setState({ imageName });\r\n  };\r\n\r\n  pageScroll() {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.App}>\r\n        <Searchbar onSubmit={this.handleFormSubmit} />\r\n        <ImageGallery\r\n          imageName={this.state.imageName}\r\n          pageScroll={this.pageScroll}\r\n        />\r\n        <ToastContainer autoClose={2000} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__33bli\",\"form\":\"Searchbar_form__22vu4\",\"button\":\"Searchbar_button__2_hru\",\"input\":\"Searchbar_input__3Nyaa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3VHJF\",\"Title\":\"ImageGallery_Title__3_71N\"};"],"sourceRoot":""}